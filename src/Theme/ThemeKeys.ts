enum ThemeKeyVariables {
  colorPrimary100,
  colorPrimary200,
  colorPrimary300,
  colorPrimary400,
  colorPrimary,
  colorPrimary600,
  colorPrimary700,
  colorPrimary800,
  colorPrimary900,
  colorPrimaryHover,
  colorPrimaryTransparent100,
  colorPrimaryTransparent200,
  colorPrimaryTransparent300,
  colorPrimaryTransparent400,
  colorPrimaryTransparent500,
  colorPrimaryTransparent600,
  colorInkDarkest,
  colorInkDark,
  colorInk,
  colorInkMid,
  colorInkLight,
  colorInkLighter,
  colorInkLightest,
  colorInkSmoke,
  colorInkSmokest,
  colorBlack,
  colorBlackTransparent100,
  colorBlackTransparent200,
  colorBlackTransparent300,
  colorBlackTransparent400,
  colorBlackTransparent500,
  colorBlackTransparent600,
  colorBlackTransparent700,
  colorBlackTransparent800,
  colorBlackTransparent900,
  colorWhite,
  colorWhiteTransparent,
  colorTransparent,
  colorGreen,
  colorAmrap,
  colorEmom,
  colorTabata,
  colorForTime,
  colorCombine,
  colorAmrapHover,
  colorEmomHover,
  colorTabataHover,
  colorForTimeHover,
  colorCombineHover,
  colorAmrap100,
  colorAmrap200,
  colorAmrap300,
  colorAmrap400,
  colorAmrap500,
  colorAmrap600,
  colorAmrap700,
  colorAmrap800,
  colorAmrap900,
  colorTabata100,
  colorTabata200,
  colorTabata300,
  colorTabata400,
  colorTabata500,
  colorTabata600,
  colorTabata700,
  colorTabata800,
  colorTabata900,
  colorEmom100,
  colorEmom200,
  colorEmom300,
  colorEmom400,
  colorEmom500,
  colorEmom600,
  colorEmom700,
  colorEmom800,
  colorEmom900,
  colorForTime100,
  colorForTime200,
  colorForTime300,
  colorForTime400,
  colorForTime500,
  colorForTime600,
  colorForTime700,
  colorForTime800,
  colorForTime900,
  colorCombine100,
  colorCombine200,
  colorCombine300,
  colorCombine400,
  colorCombine500,
  colorCombine600,
  colorCombine700,
  colorCombine800,
  colorCombine900,
}

Object.entries(ThemeKeyVariables).forEach((k) => {
  let key = k[1];
  if (key && isNaN(key)) {
    ThemeKeyVariables[key] = key;
  }
});

type ThemeDictionary = {[key in keyof typeof ThemeKeyVariables]: string};

export const ThemeKeys: ThemeDictionary = {
  colorPrimary100: 'color-primary-100',
  colorPrimary200: 'color-primary-200',
  colorPrimary300: 'color-primary-300',
  colorPrimary400: 'color-primary-400',
  colorPrimary: 'color-primary-500',
  colorPrimary600: 'color-primary-600',
  colorPrimary700: 'color-primary-700',
  colorPrimary800: 'color-primary-800',
  colorPrimary900: 'color-primary-900',
  colorPrimaryHover: 'color-primary-hover',
  colorPrimaryTransparent100: 'color-primary-transparent-100',
  colorPrimaryTransparent200: 'color-primary-transparent-200',
  colorPrimaryTransparent300: 'color-primary-transparent-300',
  colorPrimaryTransparent400: 'color-primary-transparent-400',
  colorPrimaryTransparent500: 'color-primary-transparent-500',
  colorPrimaryTransparent600: 'color-primary-transparent-600',
  colorInkDarkest: 'color-ink-darkest',
  colorInkDark: 'color-ink-dark',
  colorInk: 'color-ink',
  colorInkMid: 'color-ink-mid',
  colorInkLight: 'color-ink-light',
  colorInkLighter: 'color-ink-lighter',
  colorInkLightest: 'color-ink-lightest',
  colorInkSmoke: 'color-ink-smoke',
  colorInkSmokest: 'color-ink-smokest',
  colorBlack: 'color-black',
  colorBlackTransparent100: 'color-black-transparent-100',
  colorBlackTransparent200: 'color-black-transparent-200',
  colorBlackTransparent300: 'color-black-transparent-300',
  colorBlackTransparent400: 'color-black-transparent-400',
  colorBlackTransparent500: 'color-black-transparent-500',
  colorBlackTransparent600: 'color-black-transparent-600',
  colorBlackTransparent700: 'color-black-transparent-700',
  colorBlackTransparent800: 'color-black-transparent-800',
  colorBlackTransparent900: 'color-black-transparent-900',
  colorWhite: 'color-white',
  colorWhiteTransparent: 'color-white-transparent',
  colorTransparent: 'color-transparent',
  colorGreen: 'color-green',
  colorAmrap: 'color-amrap',
  colorEmom: 'color-emom',
  colorTabata: 'color-tabata',
  colorForTime: 'color-for-time',
  colorCombine: 'color-combine',
  colorAmrapHover: 'color-amrap-hover',
  colorEmomHover: 'color-emom-hover',
  colorTabataHover: 'color-tabata-hover',
  colorForTimeHover: 'color-for-time-hover',
  colorCombineHover: 'color-combine-hover',
  colorAmrap100: 'color-amrap-100',
  colorAmrap200: 'color-amrap-200',
  colorAmrap300: 'color-amrap-300',
  colorAmrap400: 'color-amrap-400',
  colorAmrap500: 'color-amrap-500',
  colorAmrap600: 'color-amrap-600',
  colorAmrap700: 'color-amrap-700',
  colorAmrap800: 'color-amrap-800',
  colorAmrap900: 'color-amrap-900',
  colorTabata100: 'color-tabata-100',
  colorTabata200: 'color-tabata-200',
  colorTabata300: 'color-tabata-300',
  colorTabata400: 'color-tabata-400',
  colorTabata500: 'color-tabata-500',
  colorTabata600: 'color-tabata-600',
  colorTabata700: 'color-tabata-700',
  colorTabata800: 'color-tabata-800',
  colorTabata900: 'color-tabata-900',
  colorEmom100: 'color-emom-100',
  colorEmom200: 'color-emom-200',
  colorEmom300: 'color-emom-300',
  colorEmom400: 'color-emom-400',
  colorEmom500: 'color-emom-500',
  colorEmom600: 'color-emom-600',
  colorEmom700: 'color-emom-700',
  colorEmom800: 'color-emom-800',
  colorEmom900: 'color-emom-900',
  colorForTime100: 'color-for-time-100',
  colorForTime200: 'color-for-time-200',
  colorForTime300: 'color-for-time-300',
  colorForTime400: 'color-for-time-400',
  colorForTime500: 'color-for-time-500',
  colorForTime600: 'color-for-time-600',
  colorForTime700: 'color-for-time-700',
  colorForTime800: 'color-for-time-800',
  colorForTime900: 'color-for-time-900',
  colorCombine100: 'color-combine-100',
  colorCombine200: 'color-combine-200',
  colorCombine300: 'color-combine-300',
  colorCombine400: 'color-combine-400',
  colorCombine500: 'color-combine-500',
  colorCombine600: 'color-combine-600',
  colorCombine700: 'color-combine-700',
  colorCombine800: 'color-combine-800',
  colorCombine900: 'color-combine-900',
};
